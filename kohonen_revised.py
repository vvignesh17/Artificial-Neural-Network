# -*- coding: utf-8 -*-
"""Kohonen_revised.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/106Qbvuis_Sx7sKEaNlGK4cTpVec5NqLj
"""

import numpy as np
import pandas as pd

X=np.array([[1,1,1,0],[0,1,1,1],[1,1,0,1],[1,1,0,0]])
X

M = len(X)     # number of x vectors
N = len(X[0])
print(M)
print(N)

W=np.array([[0.2,0.4,0.7,0.8],[0.1,0.3,0.5,0.9]])
W=np.transpose(W)
W

def distance(w, x):
    r = np.zeros(W.shape)
    for i in range(M):
        for j in range(len(w)):
            r[i] = r[i] + (w[i] - x[i][j])*(w[i] - x[i][j])
    
    return r

distance(W,X)

def FindClosest(W,X):
     y=distance(W,X)
     z=np.zeros(W.shape[0])

     for i in range(M):
         if(y[i][0]<y[i][1]):
             z[i]=1
         else:
            z[i]=2

     return z

FindClosest(W,X)

la=0.5
epoch=1
for k in range(epoch):
    z=FindClosest(W,X)
    for i in range (M):
        for j in range(N):
            if(z[i]==1):
                W[i][0] = W[i][0] + la * (X[i][j] - W[i][0])
                
            else:
                W[i][1] = W[i][1] + la * (X[i][j] - W[i][1]) 
print(W)

